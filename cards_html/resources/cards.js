// Generated by CoffeeScript 1.3.3
(function() {
  var CardView, animating, animationSpeed, cardView, cardViews, color, colors, height, margin, removedStyles, restack, stackedStyles, width;

  margin = 30;

  width = window.innerWidth - 2 * margin;

  height = window.innerHeight - 2 * margin;

  animationSpeed = 300;

  colors = ['#ff695a', '#f9a77c', '#579092', '#3695d8', '#d998a6', '#dc4537', '#fff280', '#94c59c', '#3b5065', '#b75468'].sort(function() {
    return 0.5 - Math.random();
  });

  CardView = (function() {

    function CardView(color) {
      this.el = document.createElement('div');
      this.el.className = 'card';
      this.$el = $(this.el);
      this.$el.css({
        left: margin,
        top: margin,
        height: height,
        width: width,
        backgroundColor: color
      });
      this.$el.css(stackedStyles());
    }

    return CardView;

  })();

  stackedStyles = function() {
    return {
      'opacity': '1.0',
      '-webkit-transform': "rotateY(0rad) rotateZ(0rad) translateX(0px) translateY(0px) translateZ(-100px)",
      '-webkit-perspective': '0'
    };
  };

  removedStyles = function() {
    var direction, rotateY, rotateZ, translateX, translateY;
    direction = Math.random() - 0.5;
    rotateY = Math.PI / 4;
    rotateZ = direction * Math.PI / 8;
    translateX = -window.innerWidth * 1.3;
    translateY = -direction * window.innerHeight / 50;
    return {
      'opacity': '0.5',
      '-webkit-transform': "rotateY(" + rotateY + "rad) rotateZ(" + rotateZ + "rad) translateX(" + translateX + "px) translateY(" + translateY + "px) translateZ(0px)",
      '-webkit-perspective': '500'
    };
  };

  restack = function() {
    var i, view, _i, _len, _results;
    _results = [];
    for (i = _i = 0, _len = cardViews.length; _i < _len; i = ++_i) {
      view = cardViews[i];
      _results.push(view.$el.css('z-index', i, {
        '-webkit-transform': 'none'
      }));
    }
    return _results;
  };

  cardViews = (function() {
    var _i, _len, _results;
    _results = [];
    for (_i = 0, _len = colors.length; _i < _len; _i++) {
      color = colors[_i];
      cardView = new CardView(color);
      document.body.appendChild(cardView.el);
      _results.push(cardView);
    }
    return _results;
  })();

  animating = false;

  $(window).on('swipeLeft', function() {
    if (animating) {
      return;
    }
    animating = true;
    cardView = cardViews.pop();
    cardViews.unshift(cardView);
    return cardView.$el.animate(removedStyles(), animationSpeed, 'ease', function() {
      animating = false;
      cardView.$el.css(stackedStyles());
      return restack();
    });
  });

  $(window).on('swipeRight', function() {
    if (animating) {
      return;
    }
    animating = true;
    cardView = cardViews.shift();
    cardViews.push(cardView);
    cardView.$el.css(removedStyles());
    restack();
    return cardView.$el.animate(stackedStyles(), animationSpeed, 'ease', function() {
      return animating = false;
    });
  });

}).call(this);
